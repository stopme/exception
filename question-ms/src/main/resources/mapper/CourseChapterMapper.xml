<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exception.qms.domain.mapper.CourseChapterMapper" >
  <resultMap id="BaseResultMap" type="com.exception.qms.domain.entity.CourseChapter" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="en_title" property="enTitle" jdbcType="VARCHAR" />
    <result column="chapter_num" property="chapterNum" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="is_secondary" property="isSecondary" jdbcType="BIT" />
    <result column="is_header" property="isHeader" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_id, title, chapter_num, create_user_id, create_time, update_time, is_deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_cms_course_chapter
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findChaptersByCourseId" resultMap="BaseResultMap">
    select id, course_id, title, is_secondary, chapter_num, en_title, is_header from t_cms_course_chapter
    where course_id = #{courseId} and is_deleted = 0 order by chapter_num
  </select>

  <select id="findChaptersByEnTitle" resultMap="BaseResultMap">
    select id, course_id, title, chapter_num, en_title from t_cms_course_chapter
    where en_title = #{chapterEnTitle} and is_deleted = 0
  </select>

  <select id="findChapterByChapterId" resultMap="BaseResultMap">
    select id, course_id, title, chapter_num from t_cms_course_chapter
    where id = #{chapterId} and is_deleted = 0
  </select>

  <select id="findByChapterIds" resultMap="BaseResultMap">
    select id, course_id, update_time from t_cms_course_chapter
    where id in
    <foreach collection="list" item="chapterId" open="(" separator="," close=")">
      #{chapterId}
    </foreach>
    and is_deleted = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_cms_course_chapter
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.exception.qms.domain.entity.CourseChapter" >
    insert into t_cms_course_chapter (id, course_id, title, 
      order, create_user_id, create_time, 
      update_time, is_deleted)
    values (#{id,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{order,jdbcType=INTEGER}, #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.exception.qms.domain.entity.CourseChapter" >
    insert into t_cms_course_chapter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="order != null" >
        order,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="order != null" >
        #{order,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <insert id="addCourseChapterBatch">
    insert into t_cms_course_chapter (course_id, title,
      chapter_num, create_user_id, create_time,
      update_time, is_deleted)
      values
      <foreach collection="list" item="item" separator=",">
        (#{item.courseId}, #{item.title},
        #{item.chapterNum}, #{item.createUserId}, NOW(),
        NOW(), 0)
      </foreach>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.exception.qms.domain.entity.CourseChapter" >
    update t_cms_course_chapter
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="chapterNum != null" >
        chapter_num = #{chapterNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exception.qms.domain.entity.CourseChapter" >
    update t_cms_course_chapter
    set course_id = #{courseId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      order = #{order,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>